define(["app/topology/topology.module"],function(e){e.register.factory("TopologyRestangular",["Restangular","ENV",function(e,t){return e.withConfig(function(e){e.setBaseUrl(t.getBaseURL("MD_SAL"))})}]),e.register.factory("NetworkTopologySvc",["TopologyRestangular",function(e){var t={base:function(){return e.one("restconf").one("operational").one("network-topology:network-topology")},data:null,TOPOLOGY_CONST:{HT_SERVICE_ID:"host-tracker-service:id",IP:"ip",HT_SERVICE_ATTPOINTS:"host-tracker-service:attachment-points",HT_SERVICE_TPID:"host-tracker-service:tp-id",NODE_ID:"node-id",SOURCE_NODE:"source-node",DEST_NODE:"dest-node",SOURCE_TP:"source-tp",DEST_TP:"dest-tp",ADDRESSES:"addresses",HT_SERVICE_ADDS:"host-tracker-service:addresses",HT_SERVICE_IP:"host-tracker-service:ip"}};return t.getCurrentData=function(){return t.data},t.getAllNodes=function(){return t.data=t.base().getList(),t.data},t.getNode=function(e,n){var r=function(t,n){var r=t.filter(function(e,t){return e.label===n}),i;return!r||!r[0]?null:(i=r[0].id,i)},i=function(e,t,n){return e[t+":"+n]===undefined&&e[n+":"+t]===undefined?!1:!0};return t.base().one("topology",e).get().then(function(e){var s=[],o=[],u={};e.topology&&e.topology[0]&&(angular.forEach(e.topology[0].node,function(e){var n="",r="",i="",o=e[t.TOPOLOGY_CONST.NODE_ID];if(o!==undefined&&o.indexOf("host")>=0){n="host";var u=e[t.TOPOLOGY_CONST.ADDRESSES];u===undefined&&(u=e[t.TOPOLOGY_CONST.HT_SERVICE_ADDS]);if(u!==undefined){var a;for(var f=0;f<u.length;f++)a=u[f][t.TOPOLOGY_CONST.IP],a===undefined&&(a=u[f][t.TOPOLOGY_CONST.HT_SERVICE_IP]),r+="IP: <b>"+a+"</b><br>"}r+="Type: Host"}else n="switch",r="Name: <b>"+o+"</b><br>Type: Switch";i=e[t.TOPOLOGY_CONST.NODE_ID],s.push({id:s.length.toString(),label:i,group:n,value:20,title:r})}),angular.forEach(e.topology[0].link,function(e){var n=r(s,e.source[t.TOPOLOGY_CONST.SOURCE_NODE]),a=r(s,e.destination[t.TOPOLOGY_CONST.DEST_NODE]),f=e.source[t.TOPOLOGY_CONST.SOURCE_TP],l=e.destination[t.TOPOLOGY_CONST.DEST_TP],c=o.length.toString();n!=null&&a!=null&&!i(u,n,a)&&(o.push({id:c,from:n,to:a,title:"Source Port: <b>"+f+"</b><br>Dest Port: <b>"+l+"</b>"}),u[n+":"+a]=c)}));var a={nodes:s,links:o};n(a)},function(e){console.log("Error with status code",e.status)})},t}]),e.register.factory("MDSalRestangular",["Restangular","ENV",function(e,t){return e.withConfig(function(e){e.setBaseUrl(t.getBaseURL("MD_SAL"))})}]),e.register.factory("ADSalRestangular",["Restangular","ENV",function(e,t){return e.withConfig(function(e){e.setBaseUrl(t.getBaseURL("AD_SAL"))})}]),e.register.factory("pollSvc",["MDSalRestangular","ADSalRestangular",function(e,t){var n={mdsalbase:function(){return e.one("restconf").one("operational")},adsalbase:function(){return t.one("controller").one("nb").one("v2")},yanguibase:function(){return e.one("apidoc").one("apis")},data:null};return n.makePoll=function(e){this.startPoll("opendaylight-inventory:nodes","nodes",e),this.startPoll("network-topology:network-topology/topology/flow%3A1","topology",e),this.startPoll("connectionmanager/nodes","connection_manager",e),this.startPoll("flowprogrammer/default","flow",e),this.startPoll("containermanager/containers","container",e),this.startPoll("staticroute/default/routes","network",e),this.startPoll("","yangui",e)},n.startPoll=function(e,t,r){setTimeout(function(){t==="nodes"||t==="topology"?restObj=n.mdsalbase().one(e).get():t==="yangui"?restObj=n.yanguibase().get():restObj=n.adsalbase().one(e).get(),restObj.then(function(){jQuery("li[ng-type='"+t+"']").show(),n.startPoll(e,t,r!==undefined?r*2:5e3)},function(){jQuery("li[ng-type='"+t+"']").hide(),n.startPoll(e,t,r!==undefined?r*2:5e3)})},r!==undefined?r:5e3)},n}])});